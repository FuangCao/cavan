#!/usr/bin/python

import sys
import os
from sys import argv

class SvnRreoManager:
	def __init__(self, repo_root = "."):
		self.repo_root = os.path.abspath(repo_root)

	def svn_repo_system(self, command):
		print command
		return os.system(command)

	def svn_repo_popen(self, command):
		fp = os.popen(command)
		lines = fp.readlines()
		fp.close()
		return lines

	def svn_repo_update_single(self, pathname):
		if pathname.endswith("/"):
			if os.path.exists(pathname):
				if self.svn_repo_system("cd %s && git svn fetch" % pathname) != 0:
					return -1
			else:
				url = os.path.join(self.url, pathname.strip())
				if self.svn_repo_system("git svn clone %s" % url) != 0:
					return -1
		elif self.svn_repo_system("svn update " + pathname) != 0:
			return -1
		return 0

	def svn_repo_update(self):
		for fn in self.svn_repo_popen("svn list"):
			if self.svn_repo_update_single(fn.strip()) < 0:
				return -1
		return 0

	def svn_repo_clone(self, argv):
		if len(argv) < 1:
			print "Please give the url of svn"
			return -1

		self.url = argv[0]
		print "svn_repo clone %s => %s" % (self.url, self.repo_root)
		if not os.path.isdir(".svn"):
			if os.path.exists(".svn"):
				os.path.remove(".svn")
			if self.svn_repo_system("svn checkout --depth=empty %s ." % self.url) != 0:
				return -1
		return self.svn_repo_update()

if __name__ == "__main__":
	if len(argv) < 2:
		print "Too a few argument"
		sys.exit(-1)

	repo = SvnRreoManager()
	subcmd = argv[1]
	argv = argv[2:]

	if subcmd in ["clone", "init"]:
		repo.svn_repo_clone(argv)
	elif subcmd in ["update"]:
		repo.svn_repo_update()
	else:
		print "unknown subcmd `%s'" % subcmd
