#!/bin/bash

PATH="/sbin:/usr/sbin:/usr/local/sbin:/bin:/usr/bin:/usr/local/bin:${PATH}"

MAKEFILE_AM="Makefile.am"
CAVAN_NAME="cavan"
CAVAN_CPP_NAME="${CAVAN_NAME}xx"
AUTOMAKE_OPTIONS="foreign subdir-objects"
ACLOCAL_AMFLAGS="-I m4"
AM_CFLAGS="-I@top_srcdir@/include -include @top_srcdir@/include/cavan/config.h -DCAVAN"

function gen_makefile_am_header()
{
	cat > ${MAKEFILE_AM} << EOF
# This file automatically generated by Fuang.Cao

AUTOMAKE_OPTIONS = ${AUTOMAKE_OPTIONS}

MAINTAINERCLEANFILES = ${MAKEFILE_AM} Makefile.in

EOF
}

function gen_app_makefile_am()
{
	cd $1 || return 1

	gen_makefile_am_header

	cat >> ${MAKEFILE_AM} << EOF
APP_SRC_FILES = $(echo *.c)
APP_CORE_FILES = $(echo core/*.c)
LIB_OBJ_FILES = \$(wildcard @top_builddir@/lib/*.o)
APP_CORE_DEPDIR = core/@DEPDIR@
FILE_CAVAN_MAP_C = \$(APP_CORE_DEPDIR)/cavan_map.c
FILE_CAVAN_MAP_H = \$(APP_CORE_DEPDIR)/cavan_map.h

AM_CFLAGS = ${AM_CFLAGS} \$(CAVAN_MAIN_CFLAGS)
AM_LDFLAGS = -lpthread -lm -lrt

if CONFIG_CAVAN_CPP
LIB_OBJ_FILES += \$(wildcard @top_builddir@/cpp/*.o)
APP_SRC_FILES += $(echo *.cpp)
AM_CPPFLAGS = \$(AM_CFLAGS)
else
\$(PROGRAMS): CXXLINK = \$(LINK)
endif

${CAVAN_NAME}_main_SOURCES = \$(APP_SRC_FILES) \$(APP_CORE_FILES)
${CAVAN_NAME}_main_LDADD = \$(LIB_OBJ_FILES)
${CAVAN_NAME}_main_DEPENDENCIES = \$(LIB_OBJ_FILES)

bin_PROGRAMS = ${CAVAN_NAME}-main

install: install-am
	chmod -f 06755 \$(addprefix \$(DESTDIR)\$(bindir)/,\$(bin_PROGRAMS))

\$(APP_CORE_FILES): \$(FILE_CAVAN_MAP_C) \$(FILE_CAVAN_MAP_H)

\$(FILE_CAVAN_MAP_C): \$(APP_SRC_FILES) | \$(APP_CORE_DEPDIR)
	for app in \$(basename \$(notdir \$^)); \\
	do \\
		echo "{ \\"\$\${app}\\", do_cavan_\$\${app} },"; \\
	done > \$@

\$(FILE_CAVAN_MAP_H): \$(APP_SRC_FILES) | \$(APP_CORE_DEPDIR)
	for app in \$(basename \$(notdir \$^)); \\
	do \\
		echo "int do_cavan_\$\${app}(int argc, char *argv[]);"; \\
	done > \$@

%.o: CAVAN_MAIN_CFLAGS = -Dmain=do_cavan_\$(basename \$(notdir \$@))
core/%.o: CAVAN_MAIN_CFLAGS = -I\$(APP_CORE_DEPDIR)
EOF

	return 0
}

function gen_lib_makefile_am()
{
	cd $1 || return 1

	gen_makefile_am_header

	cat >> ${MAKEFILE_AM} << EOF
ACLOCAL_AMFLAGS = ${ACLOCAL_AMFLAGS}

AM_CFLAGS = ${AM_CFLAGS} -fPIC
AM_CPPFLAGS = \$(AM_CFLAGS)

lib_LTLIBRARIES = lib${2}.la
EOF
	echo lib${2}_la_SOURCES = $(ls *.c *.cpp 2>/dev/null) >> ${MAKEFILE_AM}

	return 0
}

function gen_include_sub_makefile_am()
{
	cd $1/$2 || return 1

	gen_makefile_am_header

	cat >> ${MAKEFILE_AM} << EOF
cavanincdir = \$(includedir)/$2

EOF
	echo cavaninc_HEADERS = *.h >> ${MAKEFILE_AM}

	return 0
}

function gen_include_makefile_am()
{
	local sub_dirs

	cd $1 || return 1

	for fn in *
	do
		[ -d "${fn}" ] || continue
		if [ "${sub_dirs}" ]
		then
			sub_dirs="${sub_dirs} ${fn}"
		else
			sub_dirs="${fn}"
		fi
	done

	gen_makefile_am_header

	cat >> ${MAKEFILE_AM} << EOF
SUBDIRS = ${sub_dirs}

cavanincdir = \$(includedir)

EOF
	echo cavaninc_HEADERS = *.h >> ${MAKEFILE_AM}

	for dir in ${sub_dirs}
	do
		(gen_include_sub_makefile_am "$1" "${dir}") || exit 1
	done

	return 0
}

function get_abs_directory()
{
	cd $(dirname $1) && pwd
}

function visual_commond()
{
	echo "execute: $@"
	$@ && return 0
	echo "$@ failed" && exit 1
}

CMD_ABS_DIR="$(get_abs_directory $0)"
CAVAN_ROOT="$(dirname ${CMD_ABS_DIR})"

gen_app_makefile_am ${CAVAN_ROOT}/app || exit 1
gen_lib_makefile_am ${CAVAN_ROOT}/lib ${CAVAN_NAME} || exit 1
gen_lib_makefile_am ${CAVAN_ROOT}/cpp ${CAVAN_CPP_NAME} || exit 1
gen_include_makefile_am ${CAVAN_ROOT}/include || exit 1

visual_commond cd ${CAVAN_ROOT}
# visual_commond autoscan
visual_commond libtoolize -cf
visual_commond aclocal ${ACLOCAL_AMFLAGS}
visual_commond autoheader
visual_commond rm -rf compile config.guess config.sub install-sh missing depcomp
visual_commond automake --copy --add-missing
sed -i 's/^\s*am__configure_deps\s*:\?=/& #/g' Makefile.in
visual_commond autoconf
