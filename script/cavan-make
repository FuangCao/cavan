#!/bin/bash

FILE_HEADER="This File Is Automatically Generated"
AUTHOR_INFO="Fuang.Cao <cavan.cfa@gmail.com>"
CREATE_DATE="$(date "+%Y-%m-%d %H:%M:%S")"

function generate_source_file_header()
{
cat >> $1 << EOF
/*
 * File:		$(basename $1)
 * Author:		${AUTHOR_INFO}
 * Created:		${CREATE_DATE}
 *
 * Copyright (c) $(date "+%Y") ${AUTHOR_INFO}
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#include <cavan.h>
EOF
}

function create_source_file()
{
	local HEADER_FILE_PATH

	case "$1" in
		app)
			if [ "$4" = "cpp" ]
			then
				SOURCE_FILE_NAME="$2.cpp"
			else
				SOURCE_FILE_NAME="$2.c"
			fi

			generate_source_file_header ${SOURCE_FILE_NAME}

			FILE_TYPE="app"
			MAKE_TYPE="APP"

			if [ "$3" = "simple" ]
			then
				cat >> ${SOURCE_FILE_NAME} << EOF

int main(int argc, char *argv[])
{

	return 0;
}
EOF
			else
				cat >> ${SOURCE_FILE_NAME} << EOF
#include <cavan/command.h>

#define FILE_CREATE_DATE "${CREATE_DATE}"

EOF
				cat ${CAVAN_HOME_ABS}/script/core/example.c >> $2.c
			fi
			;;
		lib)
			FILE_TYPE="lib"
			MAKE_TYPE="LIB"

			if [ "$3" = "cpp" ]
			then
				HEADER_FILE_REL_PATH="cavan++/$2.h"
				SOURCE_FILE_NAME="$2.cpp"
			else
				HEADER_FILE_REL_PATH="cavan/$2.h"
				SOURCE_FILE_NAME="$2.c"
			fi

			HEADER_FILE_REL_PATH=$(echo ${HEADER_FILE_REL_PATH} | tr [:upper:] [:lower:])
			HEADER_FILE_PATH="${CAVAN_HOME_ABS}/include/${HEADER_FILE_REL_PATH}"
			cat > "${HEADER_FILE_PATH}" << EOF
#pragma once

EOF
			generate_source_file_header ${SOURCE_FILE_NAME}
			generate_source_file_header ${HEADER_FILE_PATH}
			cat >> ${SOURCE_FILE_NAME} << EOF
#include <${HEADER_FILE_REL_PATH}>
EOF
			;;
		*)
			echo "unknown source type"
			return 1
			;;
	esac
}

function create_makefile()
{
	[ "$2" ] ||
	{
		echo "please input pathname"
		return 1
	}

	[ -e "$2" ] &&
	{
		echo "directory $2 is exist"
		return 1
	}

	echo ${PWD} | grep ${CAVAN_HOME_ABS} &&
	{
		create_source_file $* || return 1
		return 0
	}

	rm $2 -rfv

	mkdir $2 && cd $2 ||
	{
		echo "can't change directory to $2"
		return 1
	}

	create_source_file $* .


cat > cavan.mk << EOF
# ${FILE_HEADER}
# ${AUTHOR_INFO}

source-${FILE_TYPE} += $2.c
EOF

cat > Makefile << EOF
CAVAN_HOME = ${CAVAN_HOME_ABS}

all:
	@+make -C \$(CAVAN_HOME) ${MAKE_TYPE}=\$(PWD)

%:
	@+make -C \$(CAVAN_HOME) ${MAKE_TYPE}=\$(PWD) \$@
EOF
}

function get_file_abs_dir()
{
	cd `dirname $0` && pwd
}

CMD_ABS_DIR=`get_file_abs_dir $0`
CMD_ABS_PATH=${CMD_ABS_DIR}/`basename $0`

CAVAN_HOME_ABS=`dirname ${CMD_ABS_DIR}`

echo "============================================================"
echo "CMD_ABS_PATH = ${CMD_ABS_PATH}"
echo "CAVAN_HOME_ABS = ${CAVAN_HOME_ABS}"
echo "============================================================"

create_makefile $*
